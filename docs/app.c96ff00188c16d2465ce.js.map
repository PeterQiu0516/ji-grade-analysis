{"version":3,"sources":["webpack:///./app/constants/todos.ts","webpack:///./app/models/TodoModel.ts","webpack:///./app/models/CourseModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/stores/CoursesStore.ts","webpack:///./app/stores/createStore.ts","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/Footer/index.tsx","webpack:///./app/containers/Root/index.tsx","webpack:///./app/containers/Main/index.tsx","webpack:///./app/constants/stores.ts","webpack:///./app/components/icons.tsx","webpack:///./app/components/CourseList/index.tsx","webpack:///./app/containers/CourseListPage/index.tsx","webpack:///./app/components/CurveBarChart/index.tsx","webpack:///./app/components/Lesson/index.tsx","webpack:///./app/components/Course/index.tsx","webpack:///./app/containers/CoursePage/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx"],"names":["TodoFilter","text","completed","this","id","TodoModel","generateId","nextId","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","history","courses","coursesMap","keyBy","lessonsMap","scoresMap","ALL","ACTIVE","COMPLETED","todoStore","routerStore","coursesStore","render","Grid","container","justify","Typography","component","variant","color","gutterBottom","align","spacing","type","size","namespace","props","repo","Link","href","renderDevTool","classes","className","Container","maxWidth","CssBaseline","Paper","mainFeaturedPostContent","children","RootWithStyle","withStyles","theme","createStyles","mainFeaturedPost","backgroundColor","palette","grey","common","white","marginBottom","padding","breakpoints","down","paddingRight","paddingLeft","context","state","md","paragraph","Button","to","Main","Add","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","title","field","defaultSort","cellStyle","width","sorting","router","icons","options","pageSize","pageSizeOptions","style","components","elevation","onRowClick","event","rowData","console","log","courseCode","currentHash","location","hash","nextHash","CourseList","CourseListPage","colors","BarSeriesPointBase","index","Point","restProps","ChartRoot","chart","name","Root","root","display","margin","flexDirection","label","paddingTop","Label","Item","hover","tooltipTarget","totalCount","getTotalCount","CurveBarChart","sumBy","scoreData","count","updateChartData","setState","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","onChangeHover","onChangeTooltip","targetItem","rootComponent","valueField","argumentField","pointComponent","onHoverChange","bind","onTargetItemChange","contentComponent","pointData","point","percentage","Math","round","grade","scores","grades","scoreDataMap","course","lessons","updateCourse","forEach","a","hasOwnProperty","lesson","lecturersStr","lecturers","join","ensureScoreDataMap","lessonClassCode","studentNum","scoreNum","temp","zip","value","getLesson","courseNameEn","courseName","detailPanel","togglePanel","Course","match","courseStore","params","toUpperCase","available","CoursePage","App","Router","Switch","Route","exact","path","rootStore","document","getElementById"],"mappings":"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","file":"app.c96ff00188c16d2465ce.js","sourcesContent":["export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: 'All',\n  [TodoFilter.ACTIVE]: 'Active',\n  [TodoFilter.COMPLETED]: 'Completed'\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: '#',\n  [TodoFilter.ACTIVE]: '#active',\n  [TodoFilter.COMPLETED]: '#completed'\n};\n","import { observable } from 'mobx';\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import {observable} from 'mobx';\n\nexport class ScoreModel {\n  readonly courseCode: string;\n  readonly lessonClassCode: string;\n  readonly scores: number[];\n}\n\nexport class LessonModel {\n  readonly lessonClassCode: string;\n  readonly courseCode: string;\n  readonly lessonClassName: string;\n  readonly termName: string;\n  readonly studentNum: number;\n  readonly scoreNum: number;\n  readonly lecturers: string[];\n  @observable public lecturersStr?: string;\n}\n\nexport class CourseModel {\n  readonly courseCode: string;\n  readonly courseName: string;\n  readonly courseNameEn: string;\n  readonly lessons: Array<string[]>;\n  readonly terms: string;\n}\n\nexport default CourseModel;\n\n","import { observable, computed, action } from 'mobx';\nimport { TodoModel } from 'app/models';\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from 'history';\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore\n} from 'mobx-react-router';\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","import {observable} from 'mobx';\nimport _ from 'lodash';\n\nimport {CourseModel, LessonModel, ScoreModel} from 'app/models';\n\nimport courses from 'ji-grade-analysis-data/courses.json';\nimport lessons from 'ji-grade-analysis-data/lessons.json';\nimport scores from 'ji-grade-analysis-data/scores.json';\nimport {Dictionary} from 'lodash';\n\nexport class CoursesStore {\n\n  @observable public courses: Array<CourseModel>;\n  @observable public coursesMap: Dictionary<CourseModel>;\n  @observable public lessonsMap: Dictionary<LessonModel>;\n  @observable public scoresMap: Dictionary<ScoreModel>;\n\n  constructor() {\n    this.courses = courses;\n    this.coursesMap = _.keyBy(courses, 'courseCode');\n    this.lessonsMap = _.keyBy(lessons, 'lessonClassCode');\n    this.scoresMap = _.keyBy(scores, 'lessonClassCode');\n    /*scores.forEach(score => {\n      const courseCode = score.courseCode;\n      if (this.coursesMap.hasOwnProperty(courseCode)) {\n        if (!this.coursesMap[courseCode].hasOwnProperty('sections')) {\n          this.coursesMap[courseCode].sections = [];\n        }\n        this.coursesMap[courseCode].sections.push(score);\n        console.log(score, this.coursesMap[courseCode].sections)\n      }\n    });*/\n  }\n\n}\n","import {History} from 'history';\nimport {TodoModel} from 'app/models';\nimport {TodoStore} from './TodoStore';\nimport {RouterStore} from './RouterStore';\nimport {CoursesStore} from 'app/stores/CoursesStore';\nimport {STORE_TODO, STORE_ROUTER, STORE_COURSES} from 'app/constants';\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  const coursesStore = new CoursesStore();\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore,\n    [STORE_COURSES]: coursesStore,\n  };\n}\n","import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport GitHubButton from 'react-github-button';\nimport 'react-github-button/assets/style.css';\n\nexport interface HeaderProps {\n  namespace: string;\n  repo: string;\n  /* empty */\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  render() {\n    return (\n      <div>\n        <Grid container justify=\"center\">\n          <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                      gutterBottom align={'center'}>\n            UM-SJTU JI Grade Analysis\n          </Typography>\n        </Grid>\n        <Grid container justify=\"flex-end\" spacing={1}>\n          <Grid item>\n          <GitHubButton type=\"stargazers\" size=\"large\"\n                        namespace={this.props.namespace}\n                        repo={this.props.repo}/>\n          </Grid>\n          <Grid item>\n          <GitHubButton type=\"watchers\" size=\"large\"\n                        namespace={this.props.namespace}\n                        repo={this.props.repo}/>\n          </Grid>\n          <Grid item>\n          <GitHubButton type=\"forks\" size=\"large\"\n                        namespace={this.props.namespace}\n                        repo={this.props.repo}/>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport {Grid, Link} from '@material-ui/core';\n\nexport interface FooterProps {\n}\n\nexport interface FooterState {\n}\n\nexport class Footer extends React.Component<FooterProps, FooterState> {\n  render() {\n    return (\n      <footer>\n        <br/>\n        <Grid container justify=\"flex-end\">\n          Powered by&nbsp;\n          <Link href=\"https://github.com/tc-imba\"> tc-imba </Link>,\n          Copyright 2019-2020\n        </Grid>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import * as React from 'react';\nimport {\n  Container,\n  CssBaseline,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport Header from 'app/components/Header';\nimport Footer from 'app/components/Footer';\n\nimport {\n  withStyles,\n  createStyles,\n  WithStyles,\n  Theme,\n} from '@material-ui/core/styles';\nimport {RouteComponentProps} from 'react-router';\n\nconst styles = (theme: Theme) => createStyles({\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing(6)}px`,\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n});\n\nexport interface RootProps extends RouteComponentProps<any>,\n  WithStyles<typeof styles> {\n}\n\nexport interface RootState {\n}\n\nclass Root extends React.Component<RootProps, RootState> {\n  renderDevTool() {\n    if (process.env.NODE_ENV !== 'production') {\n      const DevTools = require('mobx-react-devtools').default;\n      return <DevTools/>;\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className=\"container\">\n        <Container maxWidth={'lg'}>\n          <CssBaseline/>\n          <br/>\n          <Paper>\n            <div className={classes.mainFeaturedPostContent}>\n              <Header namespace=\"tc-imba\" repo=\"ji-grade-analysis\"/>\n              <br/>\n              <Grid container justify=\"center\">\n                {this.props.children}\n              </Grid>\n              <Footer/>\n            </div>\n          </Paper>\n        </Container>\n        {this.renderDevTool()}\n      </div>\n    );\n  }\n}\n\nconst RootWithStyle = withStyles(styles)(Root);\nexport default props => <RootWithStyle {...props} />;\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Link} from 'react-router-dom';\n\nimport {STORE_ROUTER} from 'app/constants';\nimport {\n  Button, Grid,\n  Typography,\n} from '@material-ui/core';\n\nexport interface MainProps extends RouteComponentProps<any> {\n}\n\nexport interface MainState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Grid item md={10}>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          Analysis anonymous grades retrieved by all JI students,\n          among the courses with the same course code in different\n          sections and terms, aiming at forming a better\n          and fairer GPA environment in JI.\n        </Typography>\n        <Grid container justify=\"center\">\n          <Button variant=\"outlined\" color=\"secondary\" size=\"large\"\n                  component={Link} to=\"/courses\">\n            Start Explore\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","export const STORE_TODO = 'todo';\nexport const STORE_ROUTER = 'router';\nexport const STORE_COURSES = 'courses';\n","import * as React from 'react';\nimport {forwardRef} from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Icons} from 'material-table';\n\nconst icons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>),\n};\n\nexport default icons;\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  // Divider,\n  // TableHead,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\n\nimport icons from 'app/components/icons';\nimport {STORE_COURSES, STORE_ROUTER} from 'app/constants';\nimport {CoursesStore, RouterStore} from 'app/stores';\nimport CourseModel from 'app/models/CourseModel';\n\nexport interface CourseListProps {\n  /* empty */\n}\n\nexport interface CourseListState {\n  // columns: Array<Column<CourseModel>>;\n  data: CourseModel[];\n}\n\n@inject(STORE_COURSES, STORE_ROUTER)\nexport class CourseList extends React.Component<CourseListProps, CourseListState> {\n  columns: Array<Column<CourseModel>>;\n\n  constructor(props: CourseListProps, context: any) {\n    super(props, context);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    this.columns = [\n      {\n        title: 'Code', field: 'courseCode', defaultSort: 'asc',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Name', field: 'courseNameEn',\n        cellStyle: {width: '35%', maxWidth: '35%'},\n      },\n      {\n        title: 'Name (Chinese)', field: 'courseName',\n        cellStyle: {width: '35%', maxWidth: '35%'},\n      },\n      {title: 'Terms', field: 'terms', sorting: false},\n    ];\n    this.state = {\n      data: coursesStore.courses,\n    };\n  }\n\n  render() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    return (\n      // <div>\n      <MaterialTable\n        title=\"Courses\"\n        columns={this.columns}\n        data={this.state.data}\n        icons={icons}\n        options={{\n          pageSize: 10,\n          pageSizeOptions: [10, 25, 50, 100],\n        }}\n        style={{width: '100%'}}\n        components={{\n          Container: props => (<Paper elevation={0} {...props}></Paper>),\n        }}\n        onRowClick={(event, rowData) => {\n          console.log(rowData.courseCode);\n          const currentHash = router.location.hash;\n          console.log(currentHash);\n          const nextHash = `/courses/${rowData.courseCode}`;\n          if (currentHash !== nextHash) {\n            router.push(nextHash);\n          }\n        }}\n      />\n      // </div>\n    );\n  }\n}\n\nexport default CourseList;\n","import * as React from 'react';\n\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { CourseList } from 'app/components/CourseList';\n\nimport { STORE_ROUTER } from 'app/constants';\n// import {\n//   Container,\n//   CssBaseline, Paper\n// } from '@material-ui/core';\n\nexport interface CourseListPageProps extends RouteComponentProps<any> {\n}\n\nexport interface CourseListPageState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class CourseListPage extends React.Component<CourseListPageProps, CourseListPageState> {\n  constructor(props: CourseListPageProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <CourseList/>\n    );\n  }\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  Chart,\n  Legend,\n  Tooltip,\n  BarSeries,\n  Title,\n} from '@devexpress/dx-react-chart-material-ui';\nimport {\n  Animation,\n  EventTracker,\n  HoverState,\n  ArgumentAxis,\n  ValueAxis,\n  // Palette,\n} from '@devexpress/dx-react-chart';\n// import {schemePastel2} from 'd3-scale-chromatic';\n\nimport {withStyles} from '@material-ui/styles';\nimport _ from 'lodash';\n\nimport {STORE_COURSES} from 'app/constants';\n// import {ScoreModel} from 'app/models/CourseModel';\n// import {CoursesStore} from 'app/stores';\nimport {ScoreData} from 'app/components/Lesson';\n\nexport interface CurveBarChartProps {\n  // lessonClassCode: string\n  data: ScoreData[];\n}\n\nexport interface CurveBarChartState {\n  hover: any;\n  tooltipTarget: any;\n  totalCount: number;\n}\n\nconst chartRootStyles = {\n  chart: {\n    paddingRight: '20px',\n  },\n};\nconst legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n};\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1),\n  },\n});\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column',\n  },\n};\n\nconst colors = ['#fdca00', '#19335d'];\n\nconst BarSeriesPointBase = ({index, color, ...restProps}) => {\n  color = colors[index % 2];\n  // @ts-ignore\n  return <BarSeries.Point index={index}\n                          color={color} {...restProps}/>;\n};\n\nconst ChartRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Chart.Root {...restProps} className={classes.chart}/>\n);\nconst LegendRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Root {...restProps} className={classes.root}/>\n);\nconst LegendLabelBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Label {...restProps} className={classes.label}/>\n);\nconst LegendItemBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Item {...restProps} className={classes.item}/>\n);\n\n// @ts-ignore\nconst ChartRoot = withStyles(chartRootStyles, {name: 'ChartRoot'})(\n  ChartRootBase);\n// @ts-ignore\nconst LegendRoot = withStyles(legendStyles, {name: 'LegendRoot'})(\n  LegendRootBase);\n// @ts-ignore\nconst LegendLabel = withStyles(legendLabelStyles, {name: 'LegendLabel'})(\n  LegendLabelBase);\n// @ts-ignore\nconst LegendItem = withStyles(legendItemStyles, {name: 'LegendItem'})(\n  LegendItemBase);\n\n@inject(STORE_COURSES)\nexport class CurveBarChart extends React.Component<CurveBarChartProps, CurveBarChartState> {\n  constructor(props: CurveBarChartProps, context: any) {\n    super(props, context);\n    this.state = {\n      hover: null,\n      tooltipTarget: null,\n      totalCount: CurveBarChart.getTotalCount(props.data),\n    };\n  }\n\n  static getTotalCount(data: ScoreData[]) {\n    return _.sumBy(data, (scoreData: ScoreData) => scoreData.count);\n  }\n\n  updateChartData() {\n    this.setState({totalCount: CurveBarChart.getTotalCount(this.props.data)});\n  }\n\n  componentDidMount() {\n    // this.updateChartData();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CurveBarChartProps>,\n    prevState: Readonly<CurveBarChartState>, snapshot?: any) {\n    // if (this.props.lessonClassCode !== prevProps.lessonClassCode) {\n    // this.updateChartData();\n    // }\n  }\n\n  onChangeHover(hover) {\n    this.setState({hover});\n  }\n\n  onChangeTooltip(targetItem) {\n    this.setState({tooltipTarget: targetItem});\n  }\n\n  render() {\n    const TooltipContent = (props) => {\n      // const { targetItem, text, ...restProps } = props;\n      const {targetItem} = props;\n      const pointData = this.props.data[targetItem.point];\n      const percentage = Math.round(\n        pointData.count / this.state.totalCount * 10000) / 100;\n      // console.log(targetItem);\n      return (\n        <h3>\n          {pointData.grade}: {percentage}%\n          ({pointData.count}/{this.state.totalCount})\n        </h3>\n      );\n    };\n\n    return (\n      <Chart\n        data={this.props.data}\n        // @ts-ignore\n        rootComponent={ChartRoot}\n      >\n        <BarSeries\n          valueField=\"count\"\n          argumentField=\"grade\"\n          pointComponent={BarSeriesPointBase}\n        />\n        {/*<Palette scheme={schemePastel2}/>*/}\n        {\n          // @ts-ignore\n          <ArgumentAxis/>\n        }\n        {\n          // @ts-ignore\n          <ValueAxis/>\n        }\n        <Title\n          text=\"\"\n        />\n        <Animation/>\n        {/*<Legend*/}\n        {/*  // position=\"right\"*/}\n        {/*  // rootComponent={LegendRoot}*/}\n        {/*  // itemComponent={LegendItem}*/}\n        {/*  // // @ts-ignore*/}\n        {/*  // labelComponent={LegendLabel}*/}\n        {/*/>*/}\n        <EventTracker/>\n        <HoverState hover={this.state.hover}\n                    onHoverChange={this.onChangeHover.bind(this)}/>\n        <Tooltip\n          targetItem={this.state.tooltipTarget}\n          onTargetItemChange={this.onChangeTooltip.bind(this)}\n          contentComponent={TooltipContent}\n        />\n      </Chart>\n    );\n  }\n}\n","import * as React from 'react';\nimport {Grid} from '@material-ui/core';\nimport {CurveBarChart} from 'app/components/CurveBarChart';\n\nexport interface ScoreData {\n  grade: string;\n  count: number;\n}\n\nexport interface LessonProps {\n  /* empty */\n  scores: ScoreData[];\n  lessonClassCode: string;\n}\n\nexport interface LessonState {\n\n}\n\nexport class Lesson extends React.Component<LessonProps, LessonState> {\n\n  constructor(props: LessonProps, context: any) {\n    super(props, context);\n    // console.log(this.props.lessonClassCode)\n  }\n\n/*  getColor() {\n    const colors = ['#fdca00', '#19335d'];\n    // console.log(this.props.lessonClassCode);\n    const digit = this.props.lessonClassCode.charCodeAt(\n      this.props.lessonClassCode.length - 1);\n    return colors[digit % 2];\n  }*/\n\n  render() {\n    return (\n      <Grid>\n        <CurveBarChart data={this.props.scores}/>\n      </Grid>\n    );\n  }\n\n}\n\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  // Tab,\n  // Tabs,\n  // Typography,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\nimport icons from 'app/components/icons';\nimport _, {Dictionary} from 'lodash';\n\nimport {STORE_COURSES} from 'app/constants';\nimport CourseModel, {LessonModel} from 'app/models/CourseModel';\nimport {CoursesStore} from 'app/stores';\nimport {Lesson, ScoreData} from 'app/components/Lesson';\n\n// import {CurvePieChart} from 'app/components/CurvePieChart';\n\nexport interface CourseProps {\n  /* empty */\n  courseCode: string\n}\n\nexport interface CourseState {\n  course: CourseModel;\n  lessons: LessonModel[];\n  // lessonClassCode: string | boolean;\n  // lesson: LessonModel | null;\n}\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D', 'F'];\n\n@inject(STORE_COURSES)\nexport class Course extends React.Component<CourseProps, CourseState> {\n  columns: Array<Column<LessonModel>>;\n  scoreDataMap: Dictionary<ScoreData[]> = {};\n\n  // course: CourseModel;\n\n  // lessonsMap: Dictionary<string>;\n\n  constructor(props: CourseProps, context: any) {\n    super(props, context);\n    this.columns = [\n      {\n        title: 'Code', field: 'lessonClassCode',\n        cellStyle: {width: '20%', maxWidth: '20%'},\n      },\n      {\n        title: 'Term', field: 'termName',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Name', field: 'lessonClassName',\n        cellStyle: {width: '25%', maxWidth: '25%'},\n      },\n      {\n        title: 'Found', field: 'scoreNum',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Elected', field: 'studentNum',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Lecturers', field: 'lecturersStr', sorting: false,\n        cellStyle: {width: '25%', maxWidth: '25%'},\n      },\n    ];\n    this.state = {\n      course: null,\n      lessons: [],\n      // lessonClassCode: false,\n      // lesson: null,\n    };\n  }\n\n  updateCourse() {\n    console.log(this.props.courseCode);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const course = coursesStore.coursesMap[this.props.courseCode];\n    let lessons: LessonModel[] = [];\n    course.lessons.forEach(a => {\n      if (coursesStore.lessonsMap.hasOwnProperty(a[0])) {\n        let lesson = coursesStore.lessonsMap[a[0]];\n        lesson.lecturersStr = lesson.lecturers.join(', ');\n        lessons.push(lesson);\n      }\n    });\n    // this.lessonsMap = _.fromPairs(this.course.lessons);\n    // const lessonClassCode = course.lessons.length ?\n    //   course.lessons[0][0] : false;\n    this.setState({\n      course: course,\n      lessons: lessons,\n      // lessonClassCode: lessonClassCode,\n      // lesson: lessonClassCode ? this.getLesson(lessonClassCode) : null,\n    });\n  }\n\n  ensureScoreDataMap(lessonClassCode: string) {\n    if (this.scoreDataMap.hasOwnProperty(lessonClassCode)) {\n      return this.scoreDataMap[lessonClassCode];\n    }\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    let studentNum = 0;\n    let scoreNum = 0;\n    let scoreData: ScoreData[];\n    if (coursesStore.lessonsMap.hasOwnProperty(lessonClassCode)) {\n      const lesson = coursesStore.lessonsMap[lessonClassCode];\n      studentNum = lesson.studentNum;\n    }\n    if (coursesStore.scoresMap.hasOwnProperty(lessonClassCode)) {\n      const scoreRawData = coursesStore.scoresMap[lessonClassCode];\n      const scores = scoreRawData.scores;\n      const temp = _.zip(grades, scores);\n      scoreData = _.map(temp, value => {\n        scoreNum += value[1];\n        return {grade: value[0], count: value[1]};\n      });\n    } else {\n      scoreData = _.map(grades, value => {\n        return {grade: value, count: 0};\n      });\n    }\n    if (studentNum > scoreNum) {\n      scoreData.push( {grade: 'Unknown', count: studentNum - scoreNum});\n    } else {\n      scoreData.push( {grade: 'Unknown', count: 0});\n    }\n    this.scoreDataMap[lessonClassCode] = scoreData;\n    return scoreData;\n  }\n\n  componentDidMount() {\n    this.updateCourse();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CourseProps>, prevState: Readonly<CourseState>,\n    snapshot?: any) {\n    if (this.props.courseCode !== prevProps.courseCode) {\n      this.updateCourse();\n    }\n  }\n\n  getLesson(lessonClassCode: string) {\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    if (coursesStore.lessonsMap.hasOwnProperty(lessonClassCode)) {\n      return coursesStore.lessonsMap[lessonClassCode];\n    }\n    return null;\n  }\n\n  /*  handleChange(event: React.ChangeEvent<{}>, newValue: string) {\n      this.setState({\n        lessonClassCode: newValue,\n        lesson: this.getLesson(newValue),\n      });\n    };*/\n\n  render() {\n    let title = this.props.courseCode;\n    if (this.state.course) {\n      title += ' - ' + this.state.course.courseNameEn + ' - ' +\n        this.state.course.courseName;\n    }\n    return (\n      <MaterialTable\n        title={title}\n        columns={this.columns}\n        data={this.state.lessons}\n        icons={icons}\n        options={{\n          pageSize: 10,\n          pageSizeOptions: [10, 25, 50, 100],\n        }}\n        style={{width: '100%'}}\n        components={{\n          Container: props => (<Paper elevation={0} {...props}></Paper>),\n        }}\n        detailPanel={rowData => {\n          const lessonClassCode = rowData.lessonClassCode;\n          const scoreData = this.ensureScoreDataMap(lessonClassCode);\n          // console.log(lessonClassCode);\n          // console.log(scoreData);\n          return (\n            <Lesson scores={scoreData} lessonClassCode={lessonClassCode}/>\n          );\n        }}\n        onRowClick={(event, rowData, togglePanel) => togglePanel()}\n      />\n    );\n  }\n}\n\n// export default Course;\n\n{/*<Tabs\n            value={this.state.lessonClassCode}\n            onChange={this.handleChange.bind(this)}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {\n              this.state.course.lessons.map(lesson =>\n                <Tab key={lesson[0]} label={lesson[1]} value={lesson[0]}/>)\n            }\n          </Tabs>\n          <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n          >\n            {this.state.lesson.lecturers}\n            {typeof this.state.lessonClassCode === 'string' ?\n              <CurvePieChart lessonClassCode={this.state.lessonClassCode}/> :\n              null\n            }\n          </Typography>*/\n}\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Course} from 'app/components/Course';\n\nimport {STORE_COURSES} from 'app/constants';\nimport {CoursesStore} from 'app/stores/CoursesStore';\n\n// import {RouterStore} from 'app/stores';\n\nexport interface CoursePageProps extends RouteComponentProps<any> {\n}\n\nexport interface CoursePageState {\n  courseCode: string;\n  available: boolean;\n}\n\n@inject(STORE_COURSES)\n@observer\nexport class CoursePage extends React.Component<CoursePageProps, CoursePageState> {\n  constructor(props: CoursePageProps, context: any) {\n    super(props, context);\n    const {match} = this.props;\n    const courseStore = this.props[STORE_COURSES] as CoursesStore;\n    const courseCode = match.params.courseCode.toUpperCase();\n    this.state = {\n      courseCode: courseCode,\n      available: courseStore.coursesMap.hasOwnProperty(courseCode),\n    };\n  }\n\n  render() {\n    return (\n      this.state.available ?\n        <Course courseCode={this.state.courseCode}/> :\n        <div>Sorry, course {this.state.courseCode} is not available.</div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {hot} from 'react-hot-loader/root';\nimport {Router, Route, Switch} from 'react-router';\nimport Root from 'app/containers/Root';\nimport {Main} from 'app/containers/Main';\nimport {CourseListPage} from 'app/containers/CourseListPage';\nimport {CoursePage} from 'app/containers/CoursePage';\n\n// render react DOM\nexport const App = hot(({history}) => (\n  <Root>\n    <Router history={history}>\n      <Switch>\n        <Route exact path='/' component={Main}/>\n        <Route exact path='/courses' component={CourseListPage}/>\n        <Route path=\"/courses/:courseCode\" component={CoursePage}/>\n      </Switch>\n    </Router>\n  </Root>\n));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react';\n\nimport {createHashHistory} from 'history';\nimport {TodoModel} from 'app/models';\nimport {createStores} from 'app/stores';\nimport {App} from 'app';\n\n\nimport 'typeface-roboto';\n\n// default fixtures for TodoStore\nconst defaultTodos = [\n  new TodoModel('Use Mobx'),\n  new TodoModel('Use React', true),\n];\n\n// prepare MobX stores\nconst history = createHashHistory();\nconst rootStore = createStores(history, defaultTodos);\n\n// render react DOM\nReactDOM.render(\n  <Provider {...rootStore}>\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n/*\n<Container>\n        <Paper className={classes.mainFeaturedPost}>\n          <Grid container>\n            <Grid item md={6}>\n              <div className={classes.mainFeaturedPostContent}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                            gutterBottom>\n                  JI Grade Analysis\n                </Typography>\n                <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                  Analysis anonymous grades retrieved by all JI students,\n                  among the courses with the same course id in different\n                  sections and academic years, aiming at forming a better\n                  and fairer GPA environment in JI.\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n */\n"],"sourceRoot":""}