{"version":3,"sources":["webpack:///./app/constants/todos.ts","webpack:///./app/models/TodoModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/stores/CoursesStore.ts","webpack:///./app/stores/createStore.ts","webpack:///./app/components/Header/index.tsx","webpack:///./app/containers/Root/index.tsx","webpack:///./app/containers/Main/index.tsx","webpack:///./app/constants/stores.ts","webpack:///./app/components/CourseList/icons.tsx","webpack:///./app/components/CourseList/index.tsx","webpack:///./app/containers/CourseListPage/index.tsx","webpack:///./app/components/CurvePieChart/index.tsx","webpack:///./app/components/Course/index.tsx","webpack:///./app/containers/CoursePage/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx"],"names":["TodoFilter","text","completed","this","id","TodoModel","generateId","nextId","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","history","courses","coursesMap","keyBy","lessonsMap","lessons","scoresMap","ALL","ACTIVE","COMPLETED","todoStore","routerStore","coursesStore","render","Grid","container","justify","Typography","component","variant","color","gutterBottom","align","spacing","type","size","namespace","props","repo","renderDevTool","classes","className","Container","maxWidth","CssBaseline","Paper","mainFeaturedPostContent","children","RootWithStyle","withStyles","theme","createStyles","mainFeaturedPost","backgroundColor","palette","grey","common","white","marginBottom","padding","breakpoints","down","paddingRight","paddingLeft","context","state","md","paragraph","Button","Link","to","Main","Add","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","title","field","defaultSort","cellStyle","width","sorting","router","icons","options","pageSize","pageSizeOptions","components","elevation","onRowClick","event","rowData","console","log","courseCode","currentHash","location","hash","nextHash","CourseList","CourseListPage","ChartRoot","chart","name","Root","restProps","grades","root","display","margin","flexDirection","label","paddingTop","Label","Item","score","hover","tooltipTarget","totalCount","updateChartData","lessonClassCode","hasOwnProperty","scores","zip","sum","chartData","value","grade","count","setState","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","onChangeHover","onChangeTooltip","targetItem","rootComponent","valueField","argumentField","onHoverChange","bind","onTargetItemChange","contentComponent","pointData","point","percentage","Math","round","CurvePieChart","course","lesson","updateCourse","length","getLesson","handleChange","newValue","Tabs","onChange","scrollButtons","Tab","key","role","lecturers","Course","match","courseStore","params","toUpperCase","available","CoursePage","App","Router","Switch","Route","exact","path","rootStore","document","getElementById"],"mappings":"so7OAAYA,E,6dCmBG,EAjBf,WAKE,WAAYC,EAAcC,QAAA,IAAAA,OAAA,GACxBC,KAAKC,GAAKC,EAAUC,aACpBH,KAAKF,KAAOA,EACZE,KAAKD,UAAYA,EAOrB,OAHS,EAAAI,WAAP,WACE,OAAOH,KAAKI,UAFP,EAAAA,OAAS,EATJ,GAAX,a,oDACW,GAAX,a,0DAYH,EAfA,G,ooBCCA,aACE,WAAYC,GAAZ,WAiBA,KAAAC,QAAU,SAACC,GACT,EAAKC,MAAMC,KAAK,IAAI,EAAUF,EAAKT,KAAMS,EAAKR,aAIhD,KAAAW,SAAW,SAACT,EAAYU,GACtB,EAAKH,MAAQ,EAAKA,MAAMI,KAAI,SAACC,GAS3B,OARIA,EAAKZ,KAAOA,IACe,kBAAlBU,EAAKZ,YACdc,EAAKd,UAAYY,EAAKZ,WAEA,iBAAbY,EAAKb,OACde,EAAKf,KAAOa,EAAKb,OAGde,MAKX,KAAAC,WAAa,SAACb,GACZ,EAAKO,MAAQ,EAAKA,MAAMO,QAAO,SAACF,GAAS,OAAAA,EAAKZ,KAAOA,MAIvD,KAAAe,YAAc,WACZ,EAAKR,MAAQ,EAAKA,MAAMI,KAAI,SAACC,GAAS,cAAMA,GAAI,CAAEd,WAAW,QAI/D,KAAAkB,eAAiB,WACf,EAAKT,MAAQ,EAAKA,MAAMO,QAAO,SAACF,GAAS,OAACA,EAAKd,cA/C/CC,KAAKQ,MAAQH,EAiDjB,OA3CE,sBAAI,0BAAW,C,IAAf,WACE,OAAOL,KAAKQ,MAAMO,QAAO,SAACF,GAAS,OAACA,EAAKd,c,gCAI3C,sBAAI,6BAAc,C,IAAlB,WACE,OAAOC,KAAKQ,MAAMO,QAAO,SAACF,GAAS,OAAAA,EAAKd,c,gCAT9B,GAAX,a,gBAAyBmB,Q,4BAG1B,GADC,W,mFAMD,GADC,W,sFAMD,GADC,S,uDAMD,GADC,S,wDAgBD,GADC,S,0DAMD,GADC,S,2DAMD,GADC,S,8DAIH,EAnDA,G,6TCGA,cACE,WAAYC,GAAZ,MACE,cAAO,K,OACHA,IACF,EAAKA,QAAU,+BAAqBA,EAAS,I,EAGnD,OAPiC,OAOjC,EAPA,CAAiC,e,ieCIjC,aAOE,aACEnB,KAAKoB,QAAUA,EACfpB,KAAKqB,WAAa,IAAEC,MAAMF,EAAS,cACnCpB,KAAKuB,WAAa,IAAED,MAAME,EAAS,mBACnCxB,KAAKyB,UAAY,IAAEH,MAAM,EAAQ,mBAarC,OAtBc,GAAX,a,gBAA2BJ,Q,8BAChB,GAAX,a,0DACW,GAAX,a,0DACW,GAAX,a,yDAmBH,EAxBA,IJVA,SAAYrB,GACV,iBACA,uBACA,6BAHF,CAAYA,MAAU,KAOpBA,EAAW6B,IACX7B,EAAW8B,OACX9B,EAAW+B,WAGkB,MAC5B/B,EAAW6B,KAAM,MAClB,EAAC7B,EAAW8B,QAAS,SACrB,EAAC9B,EAAW+B,WAAY,aAGY,MACnC/B,EAAW6B,KAAM,IAClB,EAAC7B,EAAW8B,QAAS,UACrB,EAAC9B,EAAW+B,WAAY,a,IKdGT,E,EACrBU,EACAC,EACAC,E,sbCwCO,EAhCf,yB,+CA8BA,OA9B4B,OAC1B,YAAAC,OAAA,WACE,OACE,2BACE,gBAACC,EAAA,EAAI,CAACC,WAAS,EAACC,QAAQ,UACtB,gBAACC,EAAA,EAAU,CAACC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAClCC,cAAY,EAACC,MAAO,UAAQ,8BAI1C,gBAACR,EAAA,EAAI,CAACC,WAAS,EAACC,QAAQ,WAAWO,QAAS,GAC1C,gBAACT,EAAA,EAAI,CAAC1B,MAAI,GACV,gBAAC,IAAY,CAACoC,KAAK,aAAaC,KAAK,QACvBC,UAAW7C,KAAK8C,MAAMD,UACtBE,KAAM/C,KAAK8C,MAAMC,QAE/B,gBAACd,EAAA,EAAI,CAAC1B,MAAI,GACV,gBAAC,IAAY,CAACoC,KAAK,WAAWC,KAAK,QACrBC,UAAW7C,KAAK8C,MAAMD,UACtBE,KAAM/C,KAAK8C,MAAMC,QAE/B,gBAACd,EAAA,EAAI,CAAC1B,MAAI,GACV,gBAAC,IAAY,CAACoC,KAAK,QAAQC,KAAK,QAClBC,UAAW7C,KAAK8C,MAAMD,UACtBE,KAAM/C,KAAK8C,MAAMC,WAMzC,EA9BA,CAA4B,a,0iBCqB5B,2B,+CA6BA,OA7BmB,OACjB,YAAAC,cAAA,aAOA,YAAAhB,OAAA,WACS,IAAAiB,EAAA,WAAAA,QACP,OACE,uBAAKC,UAAU,aACb,gBAACC,EAAA,EAAS,CAACC,SAAU,MACnB,gBAACC,EAAA,EAAW,MACZ,2BACA,gBAACC,EAAA,EAAK,KACJ,uBAAKJ,UAAWD,EAAQM,yBACtB,gBAAC,EAAM,CAACV,UAAU,UAAUE,KAAK,sBACjC,2BACA,gBAACd,EAAA,EAAI,CAACC,WAAS,EAACC,QAAQ,UACrBnC,KAAK8C,MAAMU,aAKnBxD,KAAKgD,kBAId,EA7BA,CAAmB,aA+BbS,EAAgB,OAAAC,EAAA,IArDP,SAACC,G,MAAiB,cAAAC,EAAA,GAAa,CAC5CC,iBAAkB,CAChBC,gBAAiBH,EAAMI,QAAQC,KAAK,KACpCzB,MAAOoB,EAAMI,QAAQE,OAAOC,MAC5BC,aAAcR,EAAMjB,QAAQ,IAE9Ba,yBAAuB,GACrBa,QAAYT,EAAMjB,QAAQ,GAAE,MAC5B,EAACiB,EAAMU,YAAYC,KAAK,OAAQ,CAC9BC,aAAc,EACdC,YAAa,G,OA2CG,CAAmB,GAC1B,YAAA1B,GAAS,uBAACW,EAAa,KAAKX,K,uxBCnD3C,eACE,WAAYA,EAAkB2B,GAA9B,MACE,YAAM3B,EAAO2B,IAAQ,K,OACrB,EAAKC,MAAQ,G,EAqBjB,OAxB0B,QAMxB,YAAA1C,OAAA,WACE,OACE,gBAACC,EAAA,EAAI,CAAC1B,MAAI,EAACoE,GAAI,IACb,gBAACvC,EAAA,EAAU,CAACE,QAAQ,KAAKC,MAAM,UAAUqC,WAAS,wMAMlD,gBAAC3C,EAAA,EAAI,CAACC,WAAS,EAACC,QAAQ,UACtB,gBAAC0C,GAAA,EAAM,CAACvC,QAAQ,WAAWC,MAAM,YAAYK,KAAK,QAC1CP,UAAWyC,GAAA,EAAMC,GAAG,YAAU,oBAjBnCC,EAAI,IAFhB,YCjB2B,UDkB3B,I,yCACYA,GAAb,CAA0B,a,iiBEmBX,GApBM,CACnBC,IAAK,sBAAW,SAACnC,EAAOoC,GAAQ,uBAAC,KAAM,MAAKpC,EAAK,CAAEoC,IAAKA,QACxDC,MAAO,sBAAW,SAACrC,EAAOoC,GAAQ,uBAAC,KAAK,MAAKpC,EAAK,CAAEoC,IAAKA,QACzDE,MAAO,sBAAW,SAACtC,EAAOoC,GAAQ,uBAAC,KAAK,MAAKpC,EAAK,CAAEoC,IAAKA,QACzDG,OAAQ,sBAAW,SAACvC,EAAOoC,GAAQ,uBAAC,KAAa,MAAKpC,EAAK,CAAEoC,IAAKA,QAClEI,YAAa,sBAAW,SAACxC,EAAOoC,GAAQ,uBAAC,KAAY,MAAKpC,EAAK,CAAEoC,IAAKA,QACtEK,KAAM,sBAAW,SAACzC,EAAOoC,GAAQ,uBAAC,KAAI,MAAKpC,EAAK,CAAEoC,IAAKA,QACvDM,OAAQ,sBAAW,SAAC1C,EAAOoC,GAAQ,uBAAC,KAAO,MAAKpC,EAAK,CAAEoC,IAAKA,QAC5DO,OAAQ,sBAAW,SAAC3C,EAAOoC,GAAQ,uBAAC,KAAU,MAAKpC,EAAK,CAAEoC,IAAKA,QAC/DQ,UAAW,sBAAW,SAAC5C,EAAOoC,GAAQ,uBAAC,KAAS,MAAKpC,EAAK,CAAEoC,IAAKA,QACjES,SAAU,sBAAW,SAAC7C,EAAOoC,GAAQ,uBAAC,KAAQ,MAAKpC,EAAK,CAAEoC,IAAKA,QAC/DU,SAAU,sBAAW,SAAC9C,EAAOoC,GAAQ,uBAAC,KAAY,MAAKpC,EAAK,CAAEoC,IAAKA,QACnEW,aAAc,sBAAW,SAAC/C,EAAOoC,GAAQ,uBAAC,KAAW,MAAKpC,EAAK,CAAEoC,IAAKA,QACtEY,YAAa,sBAAW,SAAChD,EAAOoC,GAAQ,uBAAC,KAAK,MAAKpC,EAAK,CAAEoC,IAAKA,QAC/Da,OAAQ,sBAAW,SAACjD,EAAOoC,GAAQ,uBAAC,KAAM,MAAKpC,EAAK,CAAEoC,IAAKA,QAC3Dc,UAAW,sBAAW,SAAClD,EAAOoC,GAAQ,uBAAC,KAAa,MAAKpC,EAAK,CAAEoC,IAAKA,QACrEe,gBAAiB,sBAAW,SAACnD,EAAOoC,GAAQ,uBAAC,KAAM,MAAKpC,EAAK,CAAEoC,IAAKA,QACpEgB,WAAY,sBAAW,SAACpD,EAAOoC,GAAQ,uBAAC,KAAU,MAAKpC,EAAK,CAAEoC,IAAKA,S,o9BCZrE,eACE,WAAYpC,EAAwB2B,GAApC,MACE,YAAM3B,EAAO2B,IAAQ,KACf1C,EAAe,EAAKe,MAAmB,Q,OAC7C,EAAK4B,MAAQ,CACXyB,QAAS,CACP,CACEC,MAAO,OAAQC,MAAO,aAAcC,YAAa,MACjDC,UAAW,CAACC,MAAO,MAAOpD,SAAU,QAEtC,CACEgD,MAAO,OAAQC,MAAO,eACtBE,UAAW,CAACC,MAAO,MAAOpD,SAAU,QAEtC,CACEgD,MAAO,iBAAkBC,MAAO,aAChCE,UAAW,CAACC,MAAO,MAAOpD,SAAU,QAEtC,CAACgD,MAAO,QAASC,MAAO,QAASI,SAAS,IAE5C9F,KAAMoB,EAAaX,S,EAiCzB,OArDgC,QAwB9B,YAAAY,OAAA,WACE,IAAM0E,EAAS1G,KAAK8C,MAAkB,OACtC,OAEI,gBAAC,KAAa,CACZsD,MAAM,UACND,QAASnG,KAAK0E,MAAMyB,QACpBxF,KAAMX,KAAK0E,MAAM/D,KACjBgG,MAAO,GACPC,QAAS,CACPC,SAAU,GACVC,gBAAiB,CAAC,GAAI,GAAI,GAAI,MAEhCC,WAAY,CACV5D,UAAW,SAAAL,GAAS,OAAC,gBAACQ,EAAA,EAAK,IAAC0D,UAAW,GAAOlE,MAEhDmE,WAAY,SAACC,EAAOC,GAClBC,QAAQC,IAAIF,EAAQG,YACpB,IAAMC,EAAcb,EAAOc,SAASC,KACpCL,QAAQC,IAAIE,GACZ,IAAMG,EAAW,YAAYP,EAAQG,WACjCC,IAAgBG,GAClBhB,EAAOjG,KAAKiH,OA9CbC,EAAU,IADtB,YFrB4B,UADD,U,yCEuBfA,GAAb,CAAgC,a,mwBCJhC,eACE,WAAY7E,EAA4B2B,GAAxC,MACE,YAAM3B,EAAO2B,IAAQ,K,OACrB,EAAKC,MAAQ,G,EAQjB,OAXoC,QAMlC,YAAA1C,OAAA,WACE,OACE,gBAAC,GAAU,OARJ4F,EAAc,IAF1B,YHjB2B,UGkB3B,I,yCACYA,GAAb,CAAoC,a,i1CCoD9BC,GAAY,aAzCM,CACtBC,MAAO,CACLvD,aAAc,SAuC4B,CAACwD,KAAM,aAAnC,EAlBI,SAAC,GAAC,IAAA9E,EAAA,EAAAA,QAAS,oBAAkB,OAEjD,gBAAC,KAAM+E,KAAI,MAAKC,EAAS,CAAE/E,UAAWD,EAAQ6E,YA4B1CI,IATa,aAvCE,CACnBC,KAAM,CACJC,QAAS,OACTC,OAAQ,OACRC,cAAe,QAmCyB,CAACP,KAAM,cAAhC,EAjBI,SAAC,GAAC,IAAA9E,EAAA,EAAAA,QAAS,oBAAkB,OAElD,gBAAC,KAAO+E,KAAI,MAAKC,EAAS,CAAE/E,UAAWD,EAAQkF,WAkB7B,cAnCM,SAAAxE,GAAS,OACjC4E,MAAO,CACLC,WAAY7E,EAAMjB,QAAQ,OAiCoB,CAACqF,KAAM,eAArC,EAhBI,SAAC,GAAC,IAAA9E,EAAA,EAAAA,QAAS,oBAAkB,OAEnD,gBAAC,KAAOwF,MAAK,MAAKR,EAAS,CAAE/E,UAAWD,EAAQsF,YAiB/B,aAjCM,CACvBhI,KAAM,CACJ+H,cAAe,WA+B6B,CAACP,KAAM,cAApC,EAfI,SAAC,GAAC,IAAA9E,EAAA,EAAAA,QAAS,oBAAkB,OAElD,gBAAC,KAAOyF,KAAI,MAAKT,EAAS,CAAE/E,UAAWD,EAAQ1C,WAgBlC,CAAC,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,MAGxE,eAGE,WAAYuC,EAA2B2B,GAAvC,MACE,YAAM3B,EAAO2B,IAAQ,K,OAHvB,EAAAkE,MAAoB,KAIlB,EAAKjE,MAAQ,CACXkE,MAAO,KACPC,cAAe,KACflI,KAAM,GACNmI,WAAY,G,EAyFlB,OAlGmC,QAajC,YAAAC,gBAAA,WACE,IAAMhH,EAAe/B,KAAK8C,MAAmB,QAE7C,GADAsE,QAAQC,IAAIrH,KAAK8C,MAAMkG,iBACnBjH,EAAaN,UAAUwH,eAAejJ,KAAK8C,MAAMkG,iBAAkB,CACrE,IACME,EADYnH,EAAaN,UAAUzB,KAAK8C,MAAMkG,iBAC3BE,OACnBvI,EAAO,IAAEwI,IAAIjB,GAAQgB,GACrBJ,EAAa,IAAEM,IAAIF,GACnBG,EAAY,IAAEzI,IAAID,GAAM,SAAA2I,GAC5B,MAAO,CAACC,MAAOD,EAAM,GAAIE,MAAOF,EAAM,OAExClC,QAAQC,IAAIgC,GACZrJ,KAAKyJ,SAAS,CAAC9I,KAAM0I,EAAWP,WAAYA,SAE5C9I,KAAKyJ,SAAS,CAAC9I,KAAM,GAAImI,WAAY,KAIzC,YAAAY,kBAAA,WACE1J,KAAK+I,mBAGP,YAAAY,mBAAA,SACEC,EACAC,EAAyCC,GACrC9J,KAAK8C,MAAMkG,kBAAoBY,EAAUZ,iBAC3ChJ,KAAK+I,mBAIT,YAAAgB,cAAA,SAAcnB,GACZ5I,KAAKyJ,SAAS,CAACb,MAAK,KAGtB,YAAAoB,gBAAA,SAAgBC,GACdjK,KAAKyJ,SAAS,CAACZ,cAAeoB,KAGhC,YAAAjI,OAAA,sBAeE,OACE,gBAAC,KAAK,CACJrB,KAAMX,KAAK0E,MAAM/D,KAEjBuJ,cAAerC,IAEf,gBAAC,KAAS,CACRsC,WAAW,QACXC,cAAc,UAEhB,gBAAC,KAAK,CACJtK,KAAK,uBAEP,gBAAC,KAAS,MACV,gBAAC,KAAM,MAOP,gBAAC,KAAY,MACb,gBAAC,KAAU,CAAC8I,MAAO5I,KAAK0E,MAAMkE,MAClByB,cAAerK,KAAK+J,cAAcO,KAAKtK,QACnD,gBAAC,KAAO,CACNiK,WAAYjK,KAAK0E,MAAMmE,cACvB0B,mBAAoBvK,KAAKgK,gBAAgBM,KAAKtK,MAC9CwK,iBAzCiB,SAAC1H,GAEf,IAAAmH,EAAA,EAAAA,WACDQ,EAAY,EAAK/F,MAAM/D,KAAKsJ,EAAWS,OACvCC,EAAaC,KAAKC,MACtBJ,EAAUjB,MAAQ,EAAK9E,MAAMoE,WAAa,KAAS,IAErD,OADA1B,QAAQC,IAAI4C,GAEV,0BACGQ,EAAUlB,M,KAASoB,E,MAAeF,EAAUjB,M,IAAQ,EAAK9E,MAAMoE,W,UA7D7DgC,EAAa,IADzB,YJpF4B,W,yCIqFhBA,GAAb,CAAmC,a,mwBC9DnC,eAKE,WAAYhI,EAAoB2B,GAAhC,MACE,YAAM3B,EAAO2B,IAAQ,K,OACrB,EAAKC,MAAQ,CACXqG,OAAQ,KACR/B,iBAAiB,EACjBgC,OAAQ,M,EA0Ed,OApF4B,QAc1B,YAAAC,aAAA,WACE7D,QAAQC,IAAIrH,KAAK8C,MAAMwE,YACvB,IACMyD,EADe/K,KAAK8C,MAAmB,QACjBzB,WAAWrB,KAAK8C,MAAMwE,YAE5C0B,IAAkB+B,EAAOvJ,QAAQ0J,QACrCH,EAAOvJ,QAAQ,GAAG,GACpBxB,KAAKyJ,SAAS,CACZsB,OAAQA,EACR/B,gBAAiBA,EACjBgC,OAAQhC,EAAkBhJ,KAAKmL,UAAUnC,GAAmB,QAIhE,YAAAU,kBAAA,WACE1J,KAAKiL,gBAGP,YAAAtB,mBAAA,SACEC,EAAkCC,EAClCC,GACI9J,KAAK8C,MAAMwE,aAAesC,EAAUtC,YACtCtH,KAAKiL,gBAIT,YAAAE,UAAA,SAAUnC,GACR,IAAMjH,EAAe/B,KAAK8C,MAAmB,QAC7C,OAAIf,EAAaR,WAAW0H,eAAeD,GAClCjH,EAAaR,WAAWyH,GAE1B,MAGT,YAAAoC,aAAA,SAAalE,EAA8BmE,GACzCrL,KAAKyJ,SAAS,CACZT,gBAAiBqC,EACjBL,OAAQhL,KAAKmL,UAAUE,MAI3B,YAAArJ,OAAA,WACE,OACEhC,KAAK0E,MAAMqG,OACT,2BACE,gBAACO,GAAA,EAAI,CACHhC,MAAOtJ,KAAK0E,MAAMsE,gBAClBuC,SAAUvL,KAAKoL,aAAad,KAAKtK,MACjCsC,QAAQ,aACRkJ,cAAc,QAGZxL,KAAK0E,MAAMqG,OAAOvJ,QAAQZ,KAAI,SAAAoK,GAC5B,uBAACS,GAAA,EAAG,CAACC,IAAKV,EAAO,GAAIzC,MAAOyC,EAAO,GAAI1B,MAAO0B,EAAO,SAG3D,gBAAC5I,EAAA,EAAU,CACTC,UAAU,MACVsJ,KAAK,YAEJ3L,KAAK0E,MAAMsG,OAAOY,UACoB,iBAA/B5L,KAAK0E,MAAMsE,gBACjB,gBAAC,GAAa,CAACA,gBAAiBhJ,KAAK0E,MAAMsE,kBAC3C,OAIJ,MAjFG6C,EAAM,IADlB,YLtB4B,W,yCKuBhBA,GAAb,CAA4B,a,mwBCJ5B,eACE,WAAY/I,EAAwB2B,GAApC,MACE,YAAM3B,EAAO2B,IAAQ,KACdqH,EAAA,QAAAA,MACDC,EAAc,EAAKjJ,MAAmB,QACtCwE,EAAawE,EAAME,OAAO1E,WAAW2E,c,OAC3C,EAAKvH,MAAQ,CACX4C,WAAYA,EACZ4E,UAAWH,EAAY1K,WAAW4H,eAAe3B,I,EAWvD,OAnBgC,QAY9B,YAAAtF,OAAA,WACE,OACEhC,KAAK0E,MAAMwH,UACT,gBAAC,GAAM,CAAC5E,WAAYtH,KAAK0E,MAAM4C,aAC/B,2B,iBAAoBtH,KAAK0E,MAAM4C,W,uBAhB1B6E,EAAU,IAFtB,YNjB4B,WMkB5B,I,yCACYA,GAAb,CAAgC,aCZnBC,GAAM,eAAI,SAAC,G,IAACjL,EAAA,EAAAA,QAAa,OACpC,gBAAC,GAAI,KACH,gBAACkL,EAAA,EAAM,CAAClL,QAASA,GACf,gBAACmL,EAAA,EAAM,KACL,gBAACC,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,IAAIpK,UAAW,KACjC,gBAACkK,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,WAAWpK,UAAW,KACxC,gBAACkK,EAAA,EAAK,CAACE,KAAK,uBAAuBpK,UAAW,W,0NCFhD,GAAe,CACnB,IAAI,EAAU,YACd,IAAI,EAAU,aAAa,IAIvB,GAAU,cACVqK,IZbuBvL,EYaE,GZZvBU,EAAY,IAAI,EYYgB,IZXhCC,EAAc,IAAI,EAAYX,GAC9BY,EAAe,IAAI,GAClB,EAAP,IACa,KAAGF,EACd,EAAa,OAAGC,EAChB,EAAc,QAAGC,E,GYSrB,SACE,gBAAC,IAAQ,MAAK2K,IACZ,gBAACN,GAAG,CAACjL,QAAS,MAEhBwL,SAASC,eAAe,W","file":"app.5d65dfaac483bfc106fe.js","sourcesContent":["export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: 'All',\n  [TodoFilter.ACTIVE]: 'Active',\n  [TodoFilter.COMPLETED]: 'Completed'\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: '#',\n  [TodoFilter.ACTIVE]: '#active',\n  [TodoFilter.COMPLETED]: '#completed'\n};\n","import { observable } from 'mobx';\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import { observable, computed, action } from 'mobx';\nimport { TodoModel } from 'app/models';\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from 'history';\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore\n} from 'mobx-react-router';\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","import {observable} from 'mobx';\nimport _ from 'lodash';\n\nimport {CourseModel, LessonModel, ScoreModel} from 'app/models';\n\nimport courses from 'ji-grade-analysis-data/courses.json';\nimport lessons from 'ji-grade-analysis-data/lessons.json';\nimport scores from 'ji-grade-analysis-data/scores.json';\nimport {Dictionary} from 'lodash';\n\nexport class CoursesStore {\n\n  @observable public courses: Array<CourseModel>;\n  @observable public coursesMap: Dictionary<CourseModel>;\n  @observable public lessonsMap: Dictionary<LessonModel>;\n  @observable public scoresMap: Dictionary<ScoreModel>;\n\n  constructor() {\n    this.courses = courses;\n    this.coursesMap = _.keyBy(courses, 'courseCode');\n    this.lessonsMap = _.keyBy(lessons, 'lessonClassCode');\n    this.scoresMap = _.keyBy(scores, 'lessonClassCode');\n    /*scores.forEach(score => {\n      const courseCode = score.courseCode;\n      if (this.coursesMap.hasOwnProperty(courseCode)) {\n        if (!this.coursesMap[courseCode].hasOwnProperty('sections')) {\n          this.coursesMap[courseCode].sections = [];\n        }\n        this.coursesMap[courseCode].sections.push(score);\n        console.log(score, this.coursesMap[courseCode].sections)\n      }\n    });*/\n  }\n\n}\n","import {History} from 'history';\nimport {TodoModel} from 'app/models';\nimport {TodoStore} from './TodoStore';\nimport {RouterStore} from './RouterStore';\nimport {CoursesStore} from 'app/stores/CoursesStore';\nimport {STORE_TODO, STORE_ROUTER, STORE_COURSES} from 'app/constants';\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  const coursesStore = new CoursesStore();\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore,\n    [STORE_COURSES]: coursesStore,\n  };\n}\n","import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport GitHubButton from 'react-github-button';\nimport 'react-github-button/assets/style.css';\n\nexport interface HeaderProps {\n  namespace: string;\n  repo: string;\n  /* empty */\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  render() {\n    return (\n      <div>\n        <Grid container justify=\"center\">\n          <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                      gutterBottom align={'center'}>\n            UM-SJTU JI Grade Analysis\n          </Typography>\n        </Grid>\n        <Grid container justify=\"flex-end\" spacing={1}>\n          <Grid item>\n          <GitHubButton type=\"stargazers\" size=\"large\"\n                        namespace={this.props.namespace}\n                        repo={this.props.repo}/>\n          </Grid>\n          <Grid item>\n          <GitHubButton type=\"watchers\" size=\"large\"\n                        namespace={this.props.namespace}\n                        repo={this.props.repo}/>\n          </Grid>\n          <Grid item>\n          <GitHubButton type=\"forks\" size=\"large\"\n                        namespace={this.props.namespace}\n                        repo={this.props.repo}/>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport {\n  Container,\n  CssBaseline,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport Header from 'app/components/Header';\n\nimport {\n  withStyles,\n  createStyles,\n  WithStyles,\n  Theme,\n} from '@material-ui/core/styles';\nimport {RouteComponentProps} from 'react-router';\n\nconst styles = (theme: Theme) => createStyles({\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing(6)}px`,\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n});\n\nexport interface RootProps extends RouteComponentProps<any>,\n  WithStyles<typeof styles> {\n}\n\nexport interface RootState {\n}\n\nclass Root extends React.Component<RootProps, RootState> {\n  renderDevTool() {\n    if (process.env.NODE_ENV !== 'production') {\n      const DevTools = require('mobx-react-devtools').default;\n      return <DevTools/>;\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className=\"container\">\n        <Container maxWidth={'lg'}>\n          <CssBaseline/>\n          <br/>\n          <Paper>\n            <div className={classes.mainFeaturedPostContent}>\n              <Header namespace=\"tc-imba\" repo=\"ji-grade-analysis\"/>\n              <br/>\n              <Grid container justify=\"center\">\n                {this.props.children}\n              </Grid>\n            </div>\n          </Paper>\n        </Container>\n        {this.renderDevTool()}\n      </div>\n    );\n  }\n}\n\nconst RootWithStyle = withStyles(styles)(Root);\nexport default props => <RootWithStyle {...props} />;\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Link} from 'react-router-dom';\n\nimport {STORE_ROUTER} from 'app/constants';\nimport {\n  Button, Grid,\n  Typography,\n} from '@material-ui/core';\n\nexport interface MainProps extends RouteComponentProps<any> {\n}\n\nexport interface MainState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Grid item md={10}>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          Analysis anonymous grades retrieved by all JI students,\n          among the courses with the same course code in different\n          sections and terms, aiming at forming a better\n          and fairer GPA environment in JI.\n        </Typography>\n        <Grid container justify=\"center\">\n          <Button variant=\"outlined\" color=\"secondary\" size=\"large\"\n                  component={Link} to=\"/courses\">\n            Start Explore\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","export const STORE_TODO = 'todo';\nexport const STORE_ROUTER = 'router';\nexport const STORE_COURSES = 'courses';\n","import * as React from 'react';\nimport {forwardRef} from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Icons} from 'material-table';\n\nconst icons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>),\n};\n\nexport default icons;\n","import * as React from 'react';\nimport {\n  // Divider,\n  // TableHead,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\n\nimport icons from 'app/components/CourseList/icons';\nimport {inject} from 'mobx-react';\nimport {STORE_COURSES, STORE_ROUTER} from 'app/constants';\nimport {CoursesStore, RouterStore} from 'app/stores';\nimport CourseModel from 'app/models/CourseModel';\n\nexport interface CourseListProps {\n  /* empty */\n}\n\nexport interface CourseListState {\n  columns: Array<Column<CourseModel>>;\n  data: CourseModel[];\n}\n\n@inject(STORE_COURSES, STORE_ROUTER)\nexport class CourseList extends React.Component<CourseListProps, CourseListState> {\n  constructor(props: CourseListProps, context: any) {\n    super(props, context);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    this.state = {\n      columns: [\n        {\n          title: 'Code', field: 'courseCode', defaultSort: 'asc',\n          cellStyle: {width: '10%', maxWidth: '10%'},\n        },\n        {\n          title: 'Name', field: 'courseNameEn',\n          cellStyle: {width: '35%', maxWidth: '35%'},\n        },\n        {\n          title: 'Name (Chinese)', field: 'courseName',\n          cellStyle: {width: '35%', maxWidth: '35%'},\n        },\n        {title: 'Terms', field: 'terms', sorting: false},\n      ],\n      data: coursesStore.courses,\n    };\n  }\n\n  render() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    return (\n      // <div>\n        <MaterialTable\n          title=\"Courses\"\n          columns={this.state.columns}\n          data={this.state.data}\n          icons={icons}\n          options={{\n            pageSize: 10,\n            pageSizeOptions: [10, 25, 50, 100],\n          }}\n          components={{\n            Container: props => (<Paper elevation={0} {...props}></Paper>)\n          }}\n          onRowClick={(event, rowData) => {\n            console.log(rowData.courseCode);\n            const currentHash = router.location.hash;\n            console.log(currentHash);\n            const nextHash = `/courses/${rowData.courseCode}`;\n            if (currentHash !== nextHash) {\n              router.push(nextHash);\n            }\n          }}\n        />\n      // </div>\n    );\n  }\n}\n\nexport default CourseList;\n","import * as React from 'react';\n\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { CourseList } from 'app/components/CourseList';\n\nimport { STORE_ROUTER } from 'app/constants';\n// import {\n//   Container,\n//   CssBaseline, Paper\n// } from '@material-ui/core';\n\nexport interface CourseListPageProps extends RouteComponentProps<any> {\n}\n\nexport interface CourseListPageState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class CourseListPage extends React.Component<CourseListPageProps, CourseListPageState> {\n  constructor(props: CourseListPageProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <CourseList/>\n    );\n  }\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  Chart,\n  Legend,\n  Tooltip,\n  PieSeries,\n  Title,\n} from '@devexpress/dx-react-chart-material-ui';\nimport {Animation, EventTracker, HoverState} from '@devexpress/dx-react-chart';\nimport {withStyles} from '@material-ui/styles';\nimport _ from 'lodash';\n\nimport {STORE_COURSES} from 'app/constants';\nimport {ScoreModel} from 'app/models/CourseModel';\nimport {CoursesStore} from 'app/stores';\n\nexport interface CurvePieChartProps {\n  lessonClassCode: string\n}\n\nexport interface CurvePieChartState {\n  hover: any;\n  tooltipTarget: any;\n  data: Array<{\n    grade: string;\n    count: number;\n  }>;\n  totalCount: number;\n}\n\nconst chartRootStyles = {\n  chart: {\n    paddingRight: '20px',\n  },\n};\nconst legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n};\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1),\n  },\n});\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column',\n  },\n};\n\nconst ChartRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Chart.Root {...restProps} className={classes.chart}/>\n);\nconst LegendRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Root {...restProps} className={classes.root}/>\n);\nconst LegendLabelBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Label {...restProps} className={classes.label}/>\n);\nconst LegendItemBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Item {...restProps} className={classes.item}/>\n);\n\n// @ts-ignore\nconst ChartRoot = withStyles(chartRootStyles, {name: 'ChartRoot'})(\n  ChartRootBase);\n// @ts-ignore\nconst LegendRoot = withStyles(legendStyles, {name: 'LegendRoot'})(\n  LegendRootBase);\n// @ts-ignore\nconst LegendLabel = withStyles(legendLabelStyles, {name: 'LegendLabel'})(\n  LegendLabelBase);\n// @ts-ignore\nconst LegendItem = withStyles(legendItemStyles, {name: 'LegendItem'})(\n  LegendItemBase);\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D', 'F'];\n\n@inject(STORE_COURSES)\nexport class CurvePieChart extends React.Component<CurvePieChartProps, CurvePieChartState> {\n  score: ScoreModel = null;\n\n  constructor(props: CurvePieChartProps, context: any) {\n    super(props, context);\n    this.state = {\n      hover: null,\n      tooltipTarget: null,\n      data: [],\n      totalCount: 0,\n    };\n  }\n\n  updateChartData() {\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    console.log(this.props.lessonClassCode);\n    if (coursesStore.scoresMap.hasOwnProperty(this.props.lessonClassCode)) {\n      const scoreData = coursesStore.scoresMap[this.props.lessonClassCode];\n      const scores = scoreData.scores;\n      const data = _.zip(grades, scores);\n      const totalCount = _.sum(scores);\n      const chartData = _.map(data, value => {\n        return {grade: value[0], count: value[1]};\n      });\n      console.log(chartData);\n      this.setState({data: chartData, totalCount: totalCount});\n    } else {\n      this.setState({data: [], totalCount: 0});\n    }\n  }\n\n  componentDidMount() {\n    this.updateChartData();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CurvePieChartProps>,\n    prevState: Readonly<CurvePieChartState>, snapshot?: any) {\n    if (this.props.lessonClassCode !== prevProps.lessonClassCode) {\n      this.updateChartData();\n    }\n  }\n\n  onChangeHover(hover) {\n    this.setState({hover});\n  }\n\n  onChangeTooltip(targetItem) {\n    this.setState({tooltipTarget: targetItem});\n  }\n\n  render() {\n    const TooltipContent = (props) => {\n      // const { targetItem, text, ...restProps } = props;\n      const {targetItem} = props;\n      const pointData = this.state.data[targetItem.point];\n      const percentage = Math.round(\n        pointData.count / this.state.totalCount * 10000) / 100;\n      console.log(targetItem);\n      return (\n        <h3>\n          {pointData.grade}: {percentage}% ({pointData.count}/{this.state.totalCount})\n        </h3>\n      );\n    };\n\n    return (\n      <Chart\n        data={this.state.data}\n        // @ts-ignore\n        rootComponent={ChartRoot}\n      >\n        <PieSeries\n          valueField=\"count\"\n          argumentField=\"grade\"\n        />\n        <Title\n          text=\"Grade Distribution\"\n        />\n        <Animation/>\n        <Legend\n          // position=\"right\"\n          // rootComponent={LegendRoot}\n          // itemComponent={LegendItem}\n          // // @ts-ignore\n          // labelComponent={LegendLabel}\n        />\n        <EventTracker/>\n        <HoverState hover={this.state.hover}\n                    onHoverChange={this.onChangeHover.bind(this)}/>\n        <Tooltip\n          targetItem={this.state.tooltipTarget}\n          onTargetItemChange={this.onChangeTooltip.bind(this)}\n          contentComponent={TooltipContent}\n        />\n      </Chart>\n    );\n  }\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\n// import _, {Dictionary} from 'lodash';\nimport {STORE_COURSES} from 'app/constants';\nimport CourseModel, {LessonModel} from 'app/models/CourseModel';\nimport {CoursesStore} from 'app/stores';\nimport {CurvePieChart} from 'app/components/CurvePieChart';\n\nexport interface CourseProps {\n  /* empty */\n  courseCode: string\n}\n\nexport interface CourseState {\n  course: CourseModel;\n  lessonClassCode: string | boolean;\n  lesson: LessonModel | null;\n}\n\n@inject(STORE_COURSES)\nexport class Course extends React.Component<CourseProps, CourseState> {\n  // course: CourseModel;\n\n  // lessonsMap: Dictionary<string>;\n\n  constructor(props: CourseProps, context: any) {\n    super(props, context);\n    this.state = {\n      course: null,\n      lessonClassCode: false,\n      lesson: null,\n    };\n  }\n\n  updateCourse() {\n    console.log(this.props.courseCode);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const course = coursesStore.coursesMap[this.props.courseCode];\n    // this.lessonsMap = _.fromPairs(this.course.lessons);\n    const lessonClassCode = course.lessons.length ?\n      course.lessons[0][0] : false;\n    this.setState({\n      course: course,\n      lessonClassCode: lessonClassCode,\n      lesson: lessonClassCode ? this.getLesson(lessonClassCode) : null,\n    });\n  }\n\n  componentDidMount() {\n    this.updateCourse();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CourseProps>, prevState: Readonly<CourseState>,\n    snapshot?: any) {\n    if (this.props.courseCode !== prevProps.courseCode) {\n      this.updateCourse();\n    }\n  }\n\n  getLesson(lessonClassCode: string) {\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    if (coursesStore.lessonsMap.hasOwnProperty(lessonClassCode)) {\n      return coursesStore.lessonsMap[lessonClassCode];\n    }\n    return null;\n  }\n\n  handleChange(event: React.ChangeEvent<{}>, newValue: string) {\n    this.setState({\n      lessonClassCode: newValue,\n      lesson: this.getLesson(newValue),\n    });\n  };\n\n  render() {\n    return (\n      this.state.course ?\n        <div>\n          <Tabs\n            value={this.state.lessonClassCode}\n            onChange={this.handleChange.bind(this)}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {\n              this.state.course.lessons.map(lesson =>\n                <Tab key={lesson[0]} label={lesson[1]} value={lesson[0]}/>)\n            }\n          </Tabs>\n          <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n          >\n            {this.state.lesson.lecturers}\n            {typeof this.state.lessonClassCode === 'string' ?\n              <CurvePieChart lessonClassCode={this.state.lessonClassCode}/> :\n              null\n            }\n          </Typography>\n        </div>\n        : null\n    );\n  }\n}\n\nexport default Course;\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Course} from 'app/components/Course';\n\nimport {STORE_COURSES} from 'app/constants';\nimport {CoursesStore} from 'app/stores/CoursesStore';\n\n// import {RouterStore} from 'app/stores';\n\nexport interface CoursePageProps extends RouteComponentProps<any> {\n}\n\nexport interface CoursePageState {\n  courseCode: string;\n  available: boolean;\n}\n\n@inject(STORE_COURSES)\n@observer\nexport class CoursePage extends React.Component<CoursePageProps, CoursePageState> {\n  constructor(props: CoursePageProps, context: any) {\n    super(props, context);\n    const {match} = this.props;\n    const courseStore = this.props[STORE_COURSES] as CoursesStore;\n    const courseCode = match.params.courseCode.toUpperCase();\n    this.state = {\n      courseCode: courseCode,\n      available: courseStore.coursesMap.hasOwnProperty(courseCode),\n    };\n  }\n\n  render() {\n    return (\n      this.state.available ?\n        <Course courseCode={this.state.courseCode}/> :\n        <div>Sorry, course {this.state.courseCode} is not available.</div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {hot} from 'react-hot-loader/root';\nimport {Router, Route, Switch} from 'react-router';\nimport Root from 'app/containers/Root';\nimport {Main} from 'app/containers/Main';\nimport {CourseListPage} from 'app/containers/CourseListPage';\nimport {CoursePage} from 'app/containers/CoursePage';\n\n// render react DOM\nexport const App = hot(({history}) => (\n  <Root>\n    <Router history={history}>\n      <Switch>\n        <Route exact path='/' component={Main}/>\n        <Route exact path='/courses' component={CourseListPage}/>\n        <Route path=\"/courses/:courseCode\" component={CoursePage}/>\n      </Switch>\n    </Router>\n  </Root>\n));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react';\n\nimport {createHashHistory} from 'history';\nimport {TodoModel} from 'app/models';\nimport {createStores} from 'app/stores';\nimport {App} from 'app';\n\n\nimport 'typeface-roboto';\n\n// default fixtures for TodoStore\nconst defaultTodos = [\n  new TodoModel('Use Mobx'),\n  new TodoModel('Use React', true),\n];\n\n// prepare MobX stores\nconst history = createHashHistory();\nconst rootStore = createStores(history, defaultTodos);\n\n// render react DOM\nReactDOM.render(\n  <Provider {...rootStore}>\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n/*\n<Container>\n        <Paper className={classes.mainFeaturedPost}>\n          <Grid container>\n            <Grid item md={6}>\n              <div className={classes.mainFeaturedPostContent}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                            gutterBottom>\n                  JI Grade Analysis\n                </Typography>\n                <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                  Analysis anonymous grades retrieved by all JI students,\n                  among the courses with the same course id in different\n                  sections and academic years, aiming at forming a better\n                  and fairer GPA environment in JI.\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n */\n"],"sourceRoot":""}