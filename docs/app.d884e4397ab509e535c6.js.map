{"version":3,"sources":["webpack:///./app/constants/todos.ts","webpack:///./app/models/TodoModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/stores/CoursesStore.ts","webpack:///./app/stores/createStore.ts","webpack:///./app/containers/Root/index.tsx","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/CourseList/icons.tsx","webpack:///./app/components/CourseList/index.tsx","webpack:///./app/constants/stores.ts","webpack:///./app/containers/Main/index.tsx","webpack:///./app/components/CurvePieChart/index.tsx","webpack:///./app/components/Course/index.tsx","webpack:///./app/containers/CoursePage/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx"],"names":["TodoFilter","text","completed","this","id","TodoModel","generateId","nextId","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","history","courses","coursesMap","keyBy","lessonsMap","lessons","scoresMap","ALL","ACTIVE","COMPLETED","todoStore","routerStore","coursesStore","renderDevTool","render","className","props","children","Typography","align","variant","Add","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","context","state","columns","title","field","defaultSort","cellStyle","width","maxWidth","sorting","router","icons","options","pageSize","pageSizeOptions","onRowClick","event","rowData","console","log","courseCode","currentHash","location","hash","nextHash","CourseList","Container","CssBaseline","Paper","Main","ChartRoot","withStyles","chart","paddingRight","name","classes","Root","restProps","grades","root","display","margin","flexDirection","theme","label","paddingTop","spacing","Label","Item","score","hover","tooltipTarget","totalCount","updateChartData","lessonClassCode","hasOwnProperty","scores","zip","sum","chartData","value","grade","count","setState","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","onChangeHover","onChangeTooltip","targetItem","rootComponent","valueField","argumentField","onHoverChange","bind","onTargetItemChange","contentComponent","pointData","point","percentage","Math","round","CurvePieChart","course","lesson","updateCourse","length","getLesson","handleChange","newValue","Tabs","onChange","scrollButtons","Tab","key","component","role","lecturers","Course","match","courseStore","params","toUpperCase","available","CoursePage","App","Router","Switch","Route","exact","path","rootStore","document","getElementById"],"mappings":"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","file":"app.d884e4397ab509e535c6.js","sourcesContent":["export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: 'All',\n  [TodoFilter.ACTIVE]: 'Active',\n  [TodoFilter.COMPLETED]: 'Completed'\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: '#',\n  [TodoFilter.ACTIVE]: '#active',\n  [TodoFilter.COMPLETED]: '#completed'\n};\n","import { observable } from 'mobx';\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import { observable, computed, action } from 'mobx';\nimport { TodoModel } from 'app/models';\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from 'history';\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore\n} from 'mobx-react-router';\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","import {observable} from 'mobx';\nimport _ from 'lodash';\n\nimport {CourseModel, LessonModel, ScoreModel} from 'app/models';\n\nimport courses from 'ji-grade-analysis-data/courses.json';\nimport lessons from 'ji-grade-analysis-data/lessons.json';\nimport scores from 'ji-grade-analysis-data/scores.json';\nimport {Dictionary} from 'lodash';\n\nexport class CoursesStore {\n\n  @observable public courses: Array<CourseModel>;\n  @observable public coursesMap: Dictionary<CourseModel>;\n  @observable public lessonsMap: Dictionary<LessonModel>;\n  @observable public scoresMap: Dictionary<ScoreModel>;\n\n  constructor() {\n    this.courses = courses;\n    this.coursesMap = _.keyBy(courses, 'courseCode');\n    this.lessonsMap = _.keyBy(lessons, 'lessonClassCode');\n    this.scoresMap = _.keyBy(scores, 'lessonClassCode');\n    /*scores.forEach(score => {\n      const courseCode = score.courseCode;\n      if (this.coursesMap.hasOwnProperty(courseCode)) {\n        if (!this.coursesMap[courseCode].hasOwnProperty('sections')) {\n          this.coursesMap[courseCode].sections = [];\n        }\n        this.coursesMap[courseCode].sections.push(score);\n        console.log(score, this.coursesMap[courseCode].sections)\n      }\n    });*/\n  }\n\n}\n","import {History} from 'history';\nimport {TodoModel} from 'app/models';\nimport {TodoStore} from './TodoStore';\nimport {RouterStore} from './RouterStore';\nimport {CoursesStore} from 'app/stores/CoursesStore';\nimport {STORE_TODO, STORE_ROUTER, STORE_COURSES} from 'app/constants';\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  const coursesStore = new CoursesStore();\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore,\n    [STORE_COURSES]: coursesStore,\n  };\n}\n","import * as React from 'react';\n\nexport class Root extends React.Component<any, any> {\n  renderDevTool() {\n    if (process.env.NODE_ENV !== 'production') {\n      const DevTools = require('mobx-react-devtools').default;\n      return <DevTools />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.props.children}\n        {this.renderDevTool()}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  // Divider,\n  Typography\n} from '@material-ui/core';\n\nexport interface HeaderProps {\n  /* empty */\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n\n\n  render() {\n    return (\n      <div>\n        <Typography align={'center'} variant={'h4'}>\n          UM-SJTU-JI Grade Analysis\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport {forwardRef} from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Icons} from 'material-table';\n\nconst icons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>),\n};\n\nexport default icons;\n","import * as React from 'react';\nimport {\n  // Divider,\n  // TableHead,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\n\nimport icons from 'app/components/CourseList/icons';\nimport {inject} from 'mobx-react';\nimport {STORE_COURSES, STORE_ROUTER} from 'app/constants';\nimport {CoursesStore, RouterStore} from 'app/stores';\nimport CourseModel from 'app/models/CourseModel';\n\nexport interface CourseListProps {\n  /* empty */\n}\n\nexport interface CourseListState {\n  columns: Array<Column<CourseModel>>;\n  data: CourseModel[];\n}\n\n@inject(STORE_COURSES, STORE_ROUTER)\nexport class CourseList extends React.Component<CourseListProps, CourseListState> {\n  constructor(props: CourseListProps, context: any) {\n    super(props, context);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    this.state = {\n      columns: [\n        {\n          title: 'Code', field: 'courseCode', defaultSort: 'asc',\n          cellStyle: {width: '10%', maxWidth: '10%'},\n        },\n        {\n          title: 'Name', field: 'courseNameEn',\n          cellStyle: {width: '35%', maxWidth: '35%'},\n        },\n        {\n          title: 'Name (Chinese)', field: 'courseName',\n          cellStyle: {width: '35%', maxWidth: '35%'},\n        },\n        {title: 'Terms', field: 'terms', sorting: false},\n      ],\n      data: coursesStore.courses,\n    };\n  }\n\n  render() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    return (\n      <div>\n        <MaterialTable\n          title=\"Courses\"\n          columns={this.state.columns}\n          data={this.state.data}\n          icons={icons}\n          options={{\n            pageSize: 10,\n            pageSizeOptions: [10, 25, 50, 100],\n          }}\n          onRowClick={(event, rowData) => {\n            console.log(rowData.courseCode);\n            const currentHash = router.location.hash;\n            console.log(currentHash);\n            const nextHash = `/courses/${rowData.courseCode}`;\n            if (currentHash !== nextHash) {\n              router.push(nextHash);\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CourseList;\n","export const STORE_TODO = 'todo';\nexport const STORE_ROUTER = 'router';\nexport const STORE_COURSES = 'courses';\n","import * as React from 'react';\n\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { Header } from 'app/components/Header';\nimport { CourseList } from 'app/components/CourseList';\n\nimport { STORE_ROUTER } from 'app/constants';\nimport {\n  Container,\n  CssBaseline, Paper\n} from '@material-ui/core';\n\nexport interface MainProps extends RouteComponentProps<any> {\n}\n\nexport interface MainState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container maxWidth={'lg'}>\n        <CssBaseline/>\n        <br/>\n        <Paper>\n          <Header/>\n          <CourseList/>\n        </Paper>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  Chart,\n  Legend,\n  Tooltip,\n  PieSeries,\n  Title,\n} from '@devexpress/dx-react-chart-material-ui';\nimport {Animation, EventTracker, HoverState} from '@devexpress/dx-react-chart';\nimport {withStyles} from '@material-ui/core/styles';\nimport _ from 'lodash';\n\nimport {STORE_COURSES} from 'app/constants';\nimport {ScoreModel} from 'app/models/CourseModel';\nimport {CoursesStore} from 'app/stores';\n\nexport interface CurvePieChartProps {\n  lessonClassCode: string\n}\n\nexport interface CurvePieChartState {\n  hover: any;\n  tooltipTarget: any;\n  data: Array<{\n    grade: string;\n    count: number;\n  }>;\n  totalCount: number;\n}\n\nconst chartRootStyles = {\n  chart: {\n    paddingRight: '20px',\n  },\n};\nconst legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n};\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1),\n  },\n});\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column',\n  },\n};\n\nconst ChartRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Chart.Root {...restProps} className={classes.chart}/>\n);\nconst LegendRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Root {...restProps} className={classes.root}/>\n);\nconst LegendLabelBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Label {...restProps} className={classes.label}/>\n);\nconst LegendItemBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Item {...restProps} className={classes.item}/>\n);\n\n// @ts-ignore\nconst ChartRoot = withStyles(chartRootStyles, {name: 'ChartRoot'})(\n  ChartRootBase);\n// @ts-ignore\nconst LegendRoot = withStyles(legendStyles, {name: 'LegendRoot'})(\n  LegendRootBase);\n// @ts-ignore\nconst LegendLabel = withStyles(legendLabelStyles, {name: 'LegendLabel'})(\n  LegendLabelBase);\n// @ts-ignore\nconst LegendItem = withStyles(legendItemStyles, {name: 'LegendItem'})(\n  LegendItemBase);\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D', 'F'];\n\n@inject(STORE_COURSES)\nexport class CurvePieChart extends React.Component<CurvePieChartProps, CurvePieChartState> {\n  score: ScoreModel = null;\n\n  constructor(props: CurvePieChartProps, context: any) {\n    super(props, context);\n    this.state = {\n      hover: null,\n      tooltipTarget: null,\n      data: [],\n      totalCount: 0,\n    };\n  }\n\n  updateChartData() {\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    console.log(this.props.lessonClassCode);\n    if (coursesStore.scoresMap.hasOwnProperty(this.props.lessonClassCode)) {\n      const scoreData = coursesStore.scoresMap[this.props.lessonClassCode];\n      const scores = scoreData.scores;\n      const data = _.zip(grades, scores);\n      const totalCount = _.sum(scores);\n      const chartData = _.map(data, value => {\n        return {grade: value[0], count: value[1]};\n      });\n      console.log(chartData);\n      this.setState({data: chartData, totalCount: totalCount});\n    } else {\n      this.setState({data: [], totalCount: 0});\n    }\n  }\n\n  componentDidMount() {\n    this.updateChartData();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CurvePieChartProps>,\n    prevState: Readonly<CurvePieChartState>, snapshot?: any) {\n    if (this.props.lessonClassCode !== prevProps.lessonClassCode) {\n      this.updateChartData();\n    }\n  }\n\n  onChangeHover(hover) {\n    this.setState({hover});\n  }\n\n  onChangeTooltip(targetItem) {\n    this.setState({tooltipTarget: targetItem});\n  }\n\n  render() {\n    const TooltipContent = (props) => {\n      // const { targetItem, text, ...restProps } = props;\n      const {targetItem} = props;\n      const pointData = this.state.data[targetItem.point];\n      const percentage = Math.round(\n        pointData.count / this.state.totalCount * 10000) / 100;\n      console.log(targetItem);\n      return (\n        <h3>\n          {pointData.grade}: {percentage}% ({pointData.count}/{this.state.totalCount})\n        </h3>\n      );\n    };\n\n    return (\n      <Chart\n        data={this.state.data}\n        // @ts-ignore\n        rootComponent={ChartRoot}\n      >\n        <PieSeries\n          valueField=\"count\"\n          argumentField=\"grade\"\n        />\n        <Title\n          text=\"Grade Distribution\"\n        />\n        <Animation/>\n        <Legend\n          // position=\"right\"\n          // rootComponent={LegendRoot}\n          // itemComponent={LegendItem}\n          // // @ts-ignore\n          // labelComponent={LegendLabel}\n        />\n        <EventTracker/>\n        <HoverState hover={this.state.hover}\n                    onHoverChange={this.onChangeHover.bind(this)}/>\n        <Tooltip\n          targetItem={this.state.tooltipTarget}\n          onTargetItemChange={this.onChangeTooltip.bind(this)}\n          contentComponent={TooltipContent}\n        />\n      </Chart>\n    );\n  }\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\n// import _, {Dictionary} from 'lodash';\nimport {STORE_COURSES} from 'app/constants';\nimport CourseModel, {LessonModel} from 'app/models/CourseModel';\nimport {CoursesStore} from 'app/stores';\nimport {CurvePieChart} from 'app/components/CurvePieChart';\n\nexport interface CourseProps {\n  /* empty */\n  courseCode: string\n}\n\nexport interface CourseState {\n  course: CourseModel;\n  lessonClassCode: string | boolean;\n  lesson: LessonModel | null;\n}\n\n@inject(STORE_COURSES)\nexport class Course extends React.Component<CourseProps, CourseState> {\n  // course: CourseModel;\n\n  // lessonsMap: Dictionary<string>;\n\n  constructor(props: CourseProps, context: any) {\n    super(props, context);\n    this.state = {\n      course: null,\n      lessonClassCode: false,\n      lesson: null,\n    };\n  }\n\n  updateCourse() {\n    console.log(this.props.courseCode);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const course = coursesStore.coursesMap[this.props.courseCode];\n    // this.lessonsMap = _.fromPairs(this.course.lessons);\n    const lessonClassCode = course.lessons.length ?\n      course.lessons[0][0] : false;\n    this.setState({\n      course: course,\n      lessonClassCode: lessonClassCode,\n      lesson: lessonClassCode ? this.getLesson(lessonClassCode) : null,\n    });\n  }\n\n  componentDidMount() {\n    this.updateCourse();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CourseProps>, prevState: Readonly<CourseState>,\n    snapshot?: any) {\n    if (this.props.courseCode !== prevProps.courseCode) {\n      this.updateCourse();\n    }\n  }\n\n  getLesson(lessonClassCode: string) {\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    if (coursesStore.lessonsMap.hasOwnProperty(lessonClassCode)) {\n      return coursesStore.lessonsMap[lessonClassCode];\n    }\n    return null;\n  }\n\n  handleChange(event: React.ChangeEvent<{}>, newValue: string) {\n    this.setState({\n      lessonClassCode: newValue,\n      lesson: this.getLesson(newValue),\n    });\n  };\n\n  render() {\n    return (\n      this.state.course ?\n        <div>\n          <Tabs\n            value={this.state.lessonClassCode}\n            onChange={this.handleChange.bind(this)}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {\n              this.state.course.lessons.map(lesson =>\n                <Tab key={lesson[0]} label={lesson[1]} value={lesson[0]}/>)\n            }\n          </Tabs>\n          <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n          >\n            {this.state.lesson.lecturers}\n            {typeof this.state.lessonClassCode === 'string' ?\n              <CurvePieChart lessonClassCode={this.state.lessonClassCode}/> :\n              null\n            }\n          </Typography>\n        </div>\n        : null\n    );\n  }\n}\n\nexport default Course;\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Header} from 'app/components/Header';\nimport {Course} from 'app/components/Course';\n\nimport {STORE_COURSES} from 'app/constants';\nimport {\n  Container,\n  CssBaseline, Paper,\n} from '@material-ui/core';\nimport {CoursesStore} from 'app/stores/CoursesStore';\n\n// import {RouterStore} from 'app/stores';\n\nexport interface CoursePageProps extends RouteComponentProps<any> {\n}\n\nexport interface CoursePageState {\n  courseCode: string;\n  available: boolean;\n}\n\n@inject(STORE_COURSES)\n@observer\nexport class CoursePage extends React.Component<CoursePageProps, CoursePageState> {\n  constructor(props: CoursePageProps, context: any) {\n    super(props, context);\n    const {match} = this.props;\n    const courseStore = this.props[STORE_COURSES] as CoursesStore;\n    const courseCode = match.params.courseCode.toUpperCase();\n    this.state = {\n      courseCode: courseCode,\n      available: courseStore.coursesMap.hasOwnProperty(courseCode),\n    };\n  }\n\n  render() {\n    return (\n      <Container maxWidth={'lg'}>\n        <CssBaseline/>\n        <br/>\n        <Paper>\n          <Header/>\n          {this.state.available ?\n            <Course courseCode={this.state.courseCode}/> :\n            <div>Sorry, course {this.state.courseCode} is not available.</div>}\n        </Paper>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Router, Route, Switch } from 'react-router';\nimport { Root } from 'app/containers/Root';\nimport { Main } from 'app/containers/Main';\nimport { CoursePage } from 'app/containers/CoursePage';\n\n// render react DOM\nexport const App = hot(({ history }) => (\n  <Root>\n    <Router history={history}>\n      <Switch>\n        <Route exact path='/' component={Main} />\n        <Route path=\"/courses/:courseCode\" component={CoursePage}/>\n      </Switch>\n    </Router>\n  </Root>\n));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { createHashHistory } from 'history';\nimport { TodoModel } from 'app/models';\nimport { createStores } from 'app/stores';\nimport { App } from 'app';\n\nimport 'typeface-roboto';\n\n// default fixtures for TodoStore\nconst defaultTodos = [\n  new TodoModel('Use Mobx'),\n  new TodoModel('Use React', true)\n];\n\n// prepare MobX stores\nconst history = createHashHistory();\nconst rootStore = createStores(history, defaultTodos);\n\n// render react DOM\nReactDOM.render(\n  <Provider {...rootStore}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n/*\n<Container>\n        <Paper className={classes.mainFeaturedPost}>\n          <Grid container>\n            <Grid item md={6}>\n              <div className={classes.mainFeaturedPostContent}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                            gutterBottom>\n                  JI Grade Analysis\n                </Typography>\n                <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                  Analysis anonymous grades retrieved by all JI students,\n                  among the courses with the same course id in different\n                  sections and academic years, aiming at forming a better\n                  and fairer GPA environment in JI.\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n */\n"],"sourceRoot":""}